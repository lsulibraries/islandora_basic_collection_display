<?php
/**
 * @file
 * Contains grid markup, hook_theme_registry_alter and preprocess function.
 * Allows override of all templates in islandora_solution_pack_collection.
 */


function get_two_siblings_metaLabel($elder, $simple_xml_mods){
  if (isset($simple_xml_mods)) {
    $xpath = $simple_xml_mods->xpath("//div[@class='metadataLabel' and text() = '$elder']");
    $xpath2 = $simple_xml_mods->xpath("//div[@class='metadataLabel' and text() = '$elder']/following-sibling::div");
    $return  =  '';
    foreach ($xpath as $label){
      //$return .= $label->asXML();
      foreach ($xpath2 as $date) {
        $return .= $date->asXml();
      }
    }
    return $return;
  }
}



/**
 * Implements hook_preprocess_hook().
 * Adds/modifies variables for islandora-basic-collection-grid.tpl.php
 *
 */

function islandora_basic_collection_display_preprocess_islandora_basic_collection_grid(&$variables) {
  foreach ($variables['collection_results'] as $result) {
    // Add cmodels to object classes.
    $pid = $result['object']['value'];
    $object = islandora_object_load($pid);

    //For compound objects, guarentee first child is default thumbnail.
    $models = $object->models;
    if (in_array('islandora:compoundCModel' , $models)) {
      $children =  islandora_compound_object_get_parts($object->id);
      foreach ($children as $child) {
        $ch_obj = islandora_object_load($child);
        $ch_models = $ch_obj->models;
        if ( in_array('islandora:sp_large_image_cmodel', $ch_models)) { 
          $sequence = $ch_obj->relationships->get('http://islandora.ca/ontology/relsext#', 'isSequenceNumberOf' . str_replace(':', '_', $pid));
          if ($sequence['0']['object']['value'] == 1) {
            $str = "src='/islandora/object/{$ch_obj->id}/datastream/JPG/view'";
            $new_link =  preg_replace('/src="([^"]*)"/i', $str , $variables['associated_objects_array'][$pid]['thumb_link']);
            $variables['associated_objects_array'][$pid]['thumb_link'] = $new_link;
          }
        }
      }
    }
    // Unset FedoraObject model.
    $key = array_search('fedora-system:FedoraObject-3.0', $models);
    unset($models[$key]);
    // Don't override original classes.
    $original_class = $variables['associated_objects_array'][$pid]['class'];
    $models[] = $original_class;
    $variables['associated_objects_array'][$pid]['class'] = implode(' ', $models);
    //set all new variables to empty string by default
    $variables['associated_objects_array'][$pid]['stats'][''] = '';
    $variables['associated_objects_array'][$pid]['subjects'][''] = '';
    $variables['associated_objects_array'][$pid]['date_created'] = '';
    $variables['associated_objects_array'][$pid]['description'] = '';
    $variables['associated_objects_array'][$pid]['creator'][''] = '';
    $variables['associated_objects_array'][$pid]['contact'] = '';
    $variables['associated_objects_array'][$pid]['note'] = '';

    if (isset($object['MODS'])) { 
      module_load_include('module', 'islandora_mods_display');
      $mods_markup = islandora_mods_display_display_callback($variables['associated_objects_array'][$pid]['object']);
      $dom = new DomDocument();
      if (isset($mods_markup) && strlen($mods_markup) > 1) { 
        $dom->loadHTML($mods_markup);
        $simple_mods = simplexml_import_dom($dom);
      }
      else {
        $simple_mods = '';
      }
      if (gettype($simple_mods) != 'string' && !in_array('islandora:collectionCModel', $variables['associated_objects_array'][$pid]['object']->models)) {
        // objects not collections.
        //Subjects
        $subjects = $simple_mods->xpath('//div[@class="metadataValue modsSubject"]/a');
        $return = array();
        foreach($subjects as $sub) {
          $return[] = $sub->asXML() ."\n";
        }
        $variables['associated_objects_array'][$pid]['subjects'] = $return;

        //Date
        $return = get_two_siblings_metaLabel("Date Created", $simple_mods);
        $variables['associated_objects_array'][$pid]['date_created'] = $return;

        //abstract
        $return = get_two_siblings_metaLabel("Description", $simple_mods);
        $variables['associated_objects_array'][$pid]['description'] = $return;

        //Creator
        $return = get_two_siblings_metaLabel("Creator", $simple_mods);
        $variables['associated_objects_array'][$pid]['creator'][] = $return;
      }
      else {
        //it is a collection
        $return = $simple_mods ? get_two_siblings_metaLabel("Abstract", $simple_mods): '';
        $variables['associated_objects_array'][$pid]['description'] = $return;
        $return = $simple_mods ? get_two_siblings_metaLabel("Note", $simple_mods) : '';
        $variables['associated_objects_array'][$pid]['note'] = $return;
        $return = $simple_mods ? get_two_siblings_metaLabel("Contact", $simple_mods) : '';
        $variables['associated_objects_array'][$pid]['contact'] = $return;
      }
      // Content Stats for collections level stuff
      if (module_exists('islandora_content_stats')) {

        module_load_include('inc', 'islandora_content_stats', 'includes/utilities');
        $last_run = latest_run();
        $stats = db_query("SELECT * from {islandora_content_stats} where coll = :pid and timestamp = :timestamp ", array(':pid' => $pid, ':timestamp' => $last_run));
        $results = $stats->fetchAll();
        $more_than_one = $stats->rowCount() > 1;
        $none_set = $stats->rowCount() == 0;


        // show the stats breakdown. //still needed here bc not all collections have mods
        if (in_array('islandora:collectionCModel', $variables['associated_objects_array'][$pid]['object']->models)) {
          if($none_set){
            $variables['associated_objects_array'][$pid]['stats'][''] = '';
          }
          else{
            $total = 0;
            foreach($results as $stat) {

              // more than one model exist per collection, provide the item count per model
              if($more_than_one){
                $variables['associated_objects_array'][$pid]['stats'][map_cmodels($stat->cmodel) . ':'] = $stat->count;
              }
              $total += $stat->count;
            }
            $variables['associated_objects_array'][$pid]['stats']['Total items'] = $total;
            // placehoders for development
            if(count($variables['associated_objects_array'][$pid]['stats']) <= 1){
              $variables['associated_objects_array'][$pid]['stats']['Total items'] = '247';
              $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_images'] = '20';
              $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_pdf'] = '7';
              $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_compound'] = '220';
            }
          }
        }
      }
      else {
        $variables['associated_objects_array'][$pid]['stats'][''] = '';
      }
    }
  }
}

function islandora_basic_collection_display_preprocess_islandora_basic_collection(&$variables) {
  foreach ($variables['collection_results'] as $result) {
    // Add cmodels to object classes.
    $pid = $result['object']['value'];
    $object = islandora_object_load($pid);
    $models = $object->models;


    // Unset FedoraObject model.
    $key = array_search('fedora-system:FedoraObject-3.0', $models);
    unset($models[$key]);
    // Don't override original classes.
    $original_class = $variables['associated_objects_array'][$pid]['class'];
    $models[] = $original_class;
    $variables['associated_objects_array'][$pid]['class'] = implode(' ', $models);
    //mods is not required to add content stats
    $variables['associated_objects_array'][$pid]['subjects'][''] = '';
    $variables['associated_objects_array'][$pid]['date_created'] = '';
    $variables['associated_objects_array'][$pid]['stats'][''] = '';
    $variables['associated_objects_array'][$pid]['description'] = '';
    $variables['associated_objects_array'][$pid]['creator'][''] = '';
    $variables['associated_objects_array'][$pid]['contact'] = '';
    $variables['associated_objects_array'][$pid]['note'] = '';
    if (isset($object['MODS'])) {
      // set new vars as empty by default


      module_load_include('module', 'islandora_mods_display');
      $mods_markup = islandora_mods_display_display_callback($variables['associated_objects_array'][$pid]['object']);

      $dom = new DomDocument();
      $dom->loadHTML($mods_markup);
      $simple_mods = simplexml_import_dom($dom);

      if (!in_array('islandora:collectionCModel', $variables['associated_objects_array'][$pid]['object']->models)) {
        // objects not collections.
        //Subjects
        $subjects = $simple_mods->xpath('//div[@class="metadataValue modsSubject"]/a');
        $return = array();
        foreach($subjects as $sub) {
          $return[] = $sub->asXML() ."\n";
        }
        $variables['associated_objects_array'][$pid]['subjects'] = $return;

        //Date
        $return = get_two_siblings_metaLabel("Date Created", $simple_mods);
        $variables['associated_objects_array'][$pid]['date_created'] = $return;

        //abstract
        $return = get_two_siblings_metaLabel("Description", $simple_mods);
        $variables['associated_objects_array'][$pid]['description'] = $return;

        //Creator
        $return = get_two_siblings_metaLabel("Creator", $simple_mods);
        $variables['associated_objects_array'][$pid]['creator'][] = $return;
      }
      else {
        //it is a collection
        $return = get_two_siblings_metaLabel("Abstract", $simple_mods);
        $variables['associated_objects_array'][$pid]['description'] = $return;
        $return = get_two_siblings_metaLabel("Note", $simple_mods);
        $variables['associated_objects_array'][$pid]['note'] = $return;
        $return = get_two_siblings_metaLabel("Contact", $simple_mods);
        $variables['associated_objects_array'][$pid]['contact'] = $return;
      }
      // Content Stats for collections level stuff
      if (module_exists('islandora_content_stats')) {

        module_load_include('inc', 'islandora_content_stats', 'includes/utilities');
        $last_run = latest_run();
        $stats = db_query("SELECT * from {islandora_content_stats} where coll = :pid and timestamp = :timestamp ", array(':pid' => $pid, ':timestamp' => $last_run));
        $results = $stats->fetchAll();
        $more_than_one = $stats->rowCount() > 1;
        // show the stats breakdown.
        if (in_array('islandora:collectionCModel', $variables['associated_objects_array'][$pid]['object']->models)) {
          $total = 0;
          foreach($results as $stat) {
            // more than one model exist per collection, provide the item count per model
            if($more_than_one){
              $variables['associated_objects_array'][$pid]['stats'][map_cmodels($stat->cmodel)] = $stat->count;
            }
            $total += $stat->count;
          }
          $variables['associated_objects_array'][$pid]['stats']['Total items'] = $total;
          // placehoders for development
          if(count($variables['associated_objects_array'][$pid]['stats']) <= 1){
            $variables['associated_objects_array'][$pid]['stats']['Total items'] = '247';
            $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_images'] = '20';
            $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_pdf'] = '7';
            $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_compound'] = '220';
          }
        }
      }
    }
  }
}

function islandora_basic_collection_display_preprocess_islandora_basic_collection_wrapper(&$variables) {
  $islandora_object = $variables['islandora_object'];
  $page_number = (empty($_GET['page'])) ? 0 : $_GET['page'];
  $page_size = (empty($_GET['pagesize'])) ? variable_get('islandora_basic_collection_page_size', '12') : $_GET['pagesize'];
  list($total_count, $results) = islandora_basic_collection_get_member_objects($islandora_object, $page_number, $page_size);
  $page_num = (int) $page_number;
  //page_number starts at 0...
  $pagenot_first = $page_num > 0;
  $variables['item_count']['start'] = (!$pagenot_first) ? 1 : $page_size * $page_num + 1;
  $variables['item_count']['through'] = ($pagenot_first) ? $page_size * $page_num + count($results) : count($results);
  // Content Stats for collections level stuff
  //empty placeholder if coll has no collection policy or coll level stats isn't ready
  $variables['stats'][''] = '';
  if (module_exists('islandora_content_stats')) {
    module_load_include('inc', 'islandora_content_stats', 'includes/utilities');
    $last_run = latest_run();
    $stats = db_query("SELECT * from {islandora_content_stats} where coll = :pid and timestamp = :timestamp ", array(':pid' => $islandora_object->id, ':timestamp' => $last_run));
    $results = $stats->fetchAll();
    $more_than_one = $stats->rowCount() > 1;
    // show the stats breakdown.
    $total = 0;
    foreach($results as $stat) {
      // more than one model exist per collection, provide the item count per model
      if($more_than_one){
        $variables['stats'][map_cmodels($stat->cmodel)] = $stat->count;
      }
      $total += $stat->count;
      $variables['stats']['Total items'] = $total;
      // placehoders for development
      if(count($variables['stats']) <= 1){
        $variables['stats']['Total items'] = '247';
        $variables['stats']['PLACEHODLER_images'] = '20';
        $variables['stats']['PLACEHODLER_pdf'] = '7';
        $variables['stats']['PLACEHODLER_compound'] = '220';
      }
    }
  }
}

/**
 * Implements hook_theme_registry_alter().
 * Overrides islandora_solution_pack_collection's template files.
 */
function islandora_basic_collection_display_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module','islandora_basic_collection_display');
  $templates = drupal_find_theme_templates($theme_registry, '.tpl.php', $path);
  foreach ($templates as $key => $file) {
    $theme_registry[$key]['theme path'] = $path;
    $theme_registry[$key] = array_merge($theme_registry[$key], $file);
  }
}
