<?php

/**
 * @file
 * Contains grid markup, hook_theme_registry_alter and preprocess function.
 * Allows override of all templates in islandora_solution_pack_collection.
 */

/**
 * Implements hook_preprocess_hook().
 * Adds/modifies variables for islandora-basic-collection-grid.tpl.php
 *
 */

function islandora_basic_collection_display_preprocess_islandora_basic_collection_grid(&$variables) {
  foreach ($variables['collection_results'] as $result) {
    // Add cmodels to object classes.
    $pid = $result['object']['value'];
    $object = islandora_object_load($pid);
    $models = $object->models;
    // Unset FedoraObject model.
    $key = array_search('fedora-system:FedoraObject-3.0', $models);
    unset($models[$key]);
    // Don't override original classes.
    $original_class = $variables['associated_objects_array'][$pid]['class'];
    $models[] = $original_class;
    $variables['associated_objects_array'][$pid]['class'] = implode(' ', $models);
    if (isset($object['MODS'])) {
      $mods_ds = $object['MODS'];
      $mods = simplexml_load_string($mods_ds->content);
      //need to xpath to attribute @creator
      if ($mods->name->namePart) {
        $creators = $mods->xpath('//mods:name[@displayLabel="Creator"]');
        foreach ($creators as $name) {
          $variables['associated_objects_array'][$pid]['creator'][] = isset($name->namePart) ? (string) $name->namePart : 'PLACEHOLDER_creator';
        }
      }
      //'creator' is not showing up in the page...
      //dpm($variables['associated_objects_array'][$pid]['creator']);
      // One or the other date field.
      if (isset($mods->dateCreated)) {
        $variables['associated_objects_array'][$pid]['date_created'] = $mods->dateCreated;
      }
      elseif (isset($mods->originInfo->dateIssued)) {
        $variables['associated_objects_array'][$pid]['date_created'] = $mods->originInfo->dateIssued;
      }
      else {
        $variables['associated_objects_array'][$pid]['date_created'] = 'PLACEHOLDER_date';
      }

      // We need xpath to get all the subject nodes.
      // Make them into a link to a solr search.
      if ($mods->subject){
        $subjects_xml = $mods->xpath('//mods:subject/*');
        $subjects_array = array();
        foreach($subjects_xml as $subject) {
          // Strip whitespace.
          $stripped = preg_replace('/\s+/', '', $subject);
          // Don't return empty strings, after trimming.
          if ( (string) $stripped != ''){
            $subjects_array[] = (string) $subject;
          }
        }
        foreach ($subjects_array as $key => $value) {
          // Not a perfect link solution. mods_display.xsl provides more comprehensive links. This doesn't distinguish between types of solr fields,
          // Compound subjects ie(Military Camps--Camp Ruston) are not presented as a sigle topic.
          $variables['associated_objects_array'][$pid]['subjects'][$key] = l($value, "/islandora/search/\"$value\"?type=dismax");
        }
      }
      $variables['associated_objects_array'][$pid]['abstract'] = isset($mods->abstract) ? $mods->abstract : 'PLACEHOLDER_description';

      // For collection only.
      $variables['associated_objects_array'][$pid]['note'] = isset($mods->note) ? $mods->note : 'PLACEHOLDER_note';
      $variables['associated_objects_array'][$pid]['contact'] = isset($mods->name->namePart) ? $mods->name->namePart : 'PLACEHOLDER_contact';
    }


    // Content Stats for collections level stuff
    if (module_exists('islandora_content_stats')) {

      module_load_include('inc', 'islandora_content_stats', 'includes/utilities');
      $last_run = latest_run();
      $stats = db_query("SELECT * from {islandora_content_stats} where coll = :pid and timestamp = :timestamp ", array(':pid' => $pid, ':timestamp' => $last_run));
      $results = $stats->fetchAll();
      $more_than_one = $stats->rowCount() > 1;
      // show the stats breakdown.
      if (in_array('islandora:collectionCModel', $variables['associated_objects_array'][$pid]['object']->models)) {
        $total = 0;
        foreach($results as $stat) {
          // more than one model exist per collection, provide the item count per model
          if($more_than_one){
            $variables['associated_objects_array'][$pid]['stats'][map_cmodels($stat->cmodel)] = $stat->count;
          }
          $total += $stat->count;
        }
        $variables['associated_objects_array'][$pid]['stats']['Total items'] = $total;
        // placehoders for development
        if(count($variables['associated_objects_array'][$pid]['stats']) <= 1){
          $variables['associated_objects_array'][$pid]['stats']['Total items'] = '247';
          $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_images'] = '20';
          $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_pdf'] = '7';
          $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_compound'] = '220';
        }
      }
    }
  }
}

function islandora_basic_collection_display_preprocess_islandora_basic_collection(&$variables) {
  foreach ($variables['collection_results'] as $result) {
    // Add cmodels to object classes.
    $pid = $result['object']['value'];
    $object = islandora_object_load($pid);
    $models = $object->models;
    // Unset FedoraObject model.
    $key = array_search('fedora-system:FedoraObject-3.0', $models);
    unset($models[$key]);
    // Don't override original classes.
    $original_class = $variables['associated_objects_array'][$pid]['class'];
    $models[] = $original_class;
    $variables['associated_objects_array'][$pid]['class'] = implode(' ', $models);
    if (isset($object['MODS'])) {
      $mods_ds = $object['MODS'];
      $mods = simplexml_load_string($mods_ds->content);

      //need to xpath to attribute @creator
      if ($mods->name->namePart) {
        $creators = $mods->xpath('//mods:name[@displayLabel="Creator"]');
        foreach ($creators as $name) {
          $variables['associated_objects_array'][$pid]['creator'][] = isset($name->namePart) ? (string) $name->namePart : 'PLACEHOLDER_creator';
        }
      }

      // One or the other date field.
      if (isset($mods->dateCreated)) {
        $variables['associated_objects_array'][$pid]['date_created'] = $mods->dateCreated;
      }
      elseif (isset($mods->originInfo->dateIssued)) {
        $variables['associated_objects_array'][$pid]['date_created'] = $mods->originInfo->dateIssued;
      }
      else {
        $variables['associated_objects_array'][$pid]['date_created'] = 'PLACEHOLDER_date';
      }

      // We need xpath to get all the subject nodes.
      // Make them into a link to a solr search.
      $subjects_xml = $mods->xpath('//mods:subject/*');
      $subjects_array = array();
      foreach($subjects_xml as $subject) {
        // Strip whitespace.
        $stripped = preg_replace('/\s+/', '', $subject);
        // Don't return empty strings, after trimming.
        if ( (string) $stripped != ''){
          $subjects_array[] = (string) $subject;
        }
      }
      foreach ($subjects_array as $key => $value) {
        // Not a perfect link solution. mods_display.xsl provides more comprehensive links. This doesn't distinguish between types of solr fields,
        // Compound subjects ie(Military Camps--Camp Ruston) are not presented as a sigle topic.
        $variables['associated_objects_array'][$pid]['subjects'][$key] = l($value, "/islandora/search/\"$value\"?type=dismax");
      }
      $variables['associated_objects_array'][$pid]['abstract'] = isset($mods->abstract) ? $mods->abstract : 'PLACEHOLDER_description';

      // For collection only.
      $variables['associated_objects_array'][$pid]['note'] = isset($mods->note) ? $mods->note : 'PLACEHOLDER_note';
      $variables['associated_objects_array'][$pid]['contact'] = isset($mods->name->namePart) ? $mods->name->namePart : 'PLACEHOLDER_contact';

    }

    // Content Stats for collections level stuff
    if (module_exists('islandora_content_stats')) {

      module_load_include('inc', 'islandora_content_stats', 'includes/utilities');
      $last_run = latest_run();
      $stats = db_query("SELECT * from {islandora_content_stats} where coll = :pid and timestamp = :timestamp ", array(':pid' => $pid, ':timestamp' => $last_run));
      $results = $stats->fetchAll();
      $more_than_one = $stats->rowCount() > 1;
      // show the stats breakdown.
      if (in_array('islandora:collectionCModel', $variables['associated_objects_array'][$pid]['object']->models)) {
        $total = 0;
        foreach($results as $stat) {
          // more than one model exist per collection, provide the item count per model
          if($more_than_one){
            $variables['associated_objects_array'][$pid]['stats'][map_cmodels($stat->cmodel)] = $stat->count;
          }
          $total += $stat->count;
        }
        $variables['associated_objects_array'][$pid]['stats']['Total items'] = $total;
        // placehoders for development
        if(count($variables['associated_objects_array'][$pid]['stats']) <= 1){
          $variables['associated_objects_array'][$pid]['stats']['Total items'] = '247';
          $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_images'] = '20';
          $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_pdf'] = '7';
          $variables['associated_objects_array'][$pid]['stats']['PLACEHODLER_compound'] = '220';
        }
      }
    }
  }
}

function islandora_basic_collection_display_preprocess_islandora_basic_collection_wrapper(&$variables) {
  $islandora_object = $variables['islandora_object'];
  $page_number = (empty($_GET['page'])) ? 0 : $_GET['page'];
  $page_size = (empty($_GET['pagesize'])) ? variable_get('islandora_basic_collection_page_size', '12') : $_GET['pagesize'];
  list($total_count, $results) = islandora_basic_collection_get_member_objects($islandora_object, $page_number, $page_size);
  $page_num = (int) $page_number;
  //page_number starts at 0...
  $pagenot_one = $page_num >= 1;
  $variables['current'] = ($pagenot_one) ? $page_size * $page_num + count($results) : count($results);
  // Content Stats for collections level stuff
  if (module_exists('islandora_content_stats')) {
    module_load_include('inc', 'islandora_content_stats', 'includes/utilities');
    $last_run = latest_run();
    $stats = db_query("SELECT * from {islandora_content_stats} where coll = :pid and timestamp = :timestamp ", array(':pid' => $islandora_object->id, ':timestamp' => $last_run));
    $results = $stats->fetchAll();
    $more_than_one = $stats->rowCount() > 1;
    // show the stats breakdown.
    $total = 0;
    foreach($results as $stat) {
      // more than one model exist per collection, provide the item count per model
      if($more_than_one){
        $variables['stats'][map_cmodels($stat->cmodel)] = $stat->count;
      }
      $total += $stat->count;
      $variables['stats']['Total items'] = $total;
      // placehoders for development
      if(count($variables['stats']) <= 1){
        $variables['stats']['Total items'] = '247';
        $variables['stats']['PLACEHODLER_images'] = '20';
        $variables['stats']['PLACEHODLER_pdf'] = '7';
        $variables['stats']['PLACEHODLER_compound'] = '220';
      }
    }
  }
}

/**
 * Implements hook_theme_registry_alter().
 * Overrides islandora_solution_pack_collection's template files.
 */
function islandora_basic_collection_display_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module','islandora_basic_collection_display');
  $templates = drupal_find_theme_templates($theme_registry, '.tpl.php', $path);
  foreach ($templates as $key => $file) {
    $theme_registry[$key]['theme path'] = $path;
    $theme_registry[$key] = array_merge($theme_registry[$key], $file);
  }
}
